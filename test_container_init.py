#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ path –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_container_initialization():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    try:
        print("üß™ Testing container initialization...")
        
        # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
        print("üìã Testing settings import...")
        from src.config.settings import settings
        print(f"‚úÖ Settings loaded: TELEGRAM_BOT_TOKEN={settings.TELEGRAM_BOT_TOKEN[:10]}...")
        print(f"‚úÖ Settings loaded: OPENROUTER_API_KEY={settings.OPENROUTER_API_KEY[:10]}...")
        
        # –¢–µ—Å—Ç 2: –ò–º–ø–æ—Ä—Ç –ª–æ–≥–≥–µ—Ä–∞
        print("üìù Testing logger import...")
        from src.utils.logger import logger
        print(f"‚úÖ Logger initialized: {logger}")
        
        # –¢–µ—Å—Ç 3: –ò–º–ø–æ—Ä—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏
        print("üìö Testing history manager import...")
        from src.utils.history import history_manager
        print(f"‚úÖ History manager initialized: {history_manager}")
        
        # –¢–µ—Å—Ç 4: –ò–º–ø–æ—Ä—Ç –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞
        print("‚úÖ Testing validator import...")
        from src.utils.validators import validator
        print(f"‚úÖ Validator initialized: {validator}")
        
        # –¢–µ—Å—Ç 5: –ò–º–ø–æ—Ä—Ç LLM –∫–ª–∏–µ–Ω—Ç–∞
        print("ü§ñ Testing LLM client import...")
        from src.llm.client import llm_client
        print(f"‚úÖ LLM client initialized: {llm_client}")
        
        # –¢–µ—Å—Ç 6: –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
        print("üìñ Testing system prompt loading...")
        system_prompt = llm_client._load_system_prompt()
        print(f"‚úÖ System prompt loaded: {len(system_prompt)} characters")
        
        print("üéâ All container initialization tests passed!")
        return True
        
    except Exception as e:
        print(f"‚ùå Container initialization test failed: {e}")
        return False

if __name__ == "__main__":
    success = test_container_initialization()
    sys.exit(0 if success else 1)
